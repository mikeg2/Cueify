package com.cueify.cue;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;

import javafx.beans.property.DoubleProperty;
import javafx.beans.property.ObjectProperty;
import javafx.beans.property.SimpleDoubleProperty;
import javafx.beans.property.SimpleObjectProperty;

import com.cueify.ticker.Tickable;
import com.cueify.time.TimeElapsed;
import com.cueify.timeline.tickable.cue.CueTimeline;

/**
 * The class the class that represents a Cue
 * 
 * Internally (though accessible with getters and setters) the 
 * "timing" of a class is managed by the "timeline" class.
 * @author Michael Goldfine
 *
 */

@XmlAccessorType(XmlAccessType.NONE)
@XmlSeeAlso({AudioCue.class, WaitCue.class})
public abstract class Cue implements Tickable {
	protected CueTimeline mainTimeline;
	private ObjectProperty<String> name = new SimpleObjectProperty<>(null);
	private DoubleProperty cueNumber = new SimpleDoubleProperty(Double.NaN);

	public ObjectProperty<String> name() {
		return name;
	}
	
	public DoubleProperty cueNumber() {
		return cueNumber;
	}

	@XmlElement(name="cueNumber")
 	public Double getCueNumber() {
		return cueNumber.getValue();
	}


	public void setCueNumber(double cueNumber) {
		this.cueNumber.setValue(cueNumber);
	}

	@XmlElement(name="cueName")
	public String getName() {
		return name.getValue() == null ? "" : name.getValue();
	}


	public void setName(String name) {
		this.name.setValue(name);
	}

	@XmlElement(name="cueTimeline")
	public CueTimeline getCueTimeline() {
		return mainTimeline;
	}

	@Override
	public void tick(TimeElapsed timeSinceLastTick) {
		mainTimeline.tick(timeSinceLastTick);
	}
	
}
